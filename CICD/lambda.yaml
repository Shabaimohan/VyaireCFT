parameters:
  - name: env
    type: string
    default: dev

jobs:
  - deployment: DeployLambda
    displayName: Deploy Lambda Function
    environment: "messenger-${{ parameters.env }}"
    pool: 'VMSS Messenger Pool'  # Windows-based self-hosted agent pool
    # pool:
    #    vmImage: windows-latest
    variables:
      env: "${{ parameters.env }}"
      artifactName: Messenger
      s3Bucket: "vyaire-lambda-deployment-${{ parameters.env }}"
      lambdaFunctionName: "testingCICD"
      awsRegion: "us-east-2"

    strategy:
      runOnce:
        deploy:
          steps:
            - download: current
              displayName: "Download artifacts"
              artifact: "$(artifactName)"

            - task: ExtractFiles@1
              displayName: "Extract Build Scripts"
              inputs:
                archiveFilePatterns: "$(Pipeline.Workspace)/$(artifactName)/build-scripts.zip"
                destinationFolder: build-scripts

            - script: |
                where aws > nul 2>&1
                if %ERRORLEVEL% neq 0 (
                  echo AWS CLI not found. Installing...
                  powershell -Command "Start-Process msiexec.exe -ArgumentList '/i https://awscli.amazonaws.com/AWSCLIV2.msi /quiet /norestart' -Wait"
                ) else (
                  echo AWS CLI is already installed.
                )
              displayName: "Check & Install AWS CLI (Windows)"

            - task: AWSCLI@1
              displayName: "Configure AWS Credentials"
              inputs:
                awsCredentials: "AWS-Deployment-Service-Connection"
                regionName: "$(awsRegion)"

            - task: AWSCLI@1
              displayName: "Upload ZIP to S3"
              inputs:
                awsCredentials: "AWS-Deployment-Service-Connection"
                regionName: "$(awsRegion)"
                scriptType: "batch"
                script: |
                  aws s3 cp "$(Pipeline.Workspace)/$(artifactName)/Vyaire.Messenger.DatabaseMigration.zip" s3://$(s3Bucket)/Vyaire.Messenger.DatabaseMigration.zip

            - task: AWSCLI@1
              displayName: "Deploy to AWS Lambda"
              inputs:
                awsCredentials: "AWS-Deployment-Service-Connection"
                regionName: "$(awsRegion)"
                scriptType: "batch"
                script: |
                  aws lambda update-function-code ^
                    --function-name $(lambdaFunctionName) ^
                    --s3-bucket $(s3Bucket) ^
                    --s3-key Vyaire.Messenger.DatabaseMigration.zip

            - task: AWSCLI@1
              displayName: "Run Database Migration via AWS Lambda Function URL with IAM Authentication"
              inputs:
                awsCredentials: "AWS-Deployment-Service-Connection"
                regionName: "$(awsRegion)"
                scriptType: "batch"
                script: |
                  aws lambda invoke-url ^
                    --function-url "https://my-lambda-function-url.amazonaws.com/migrate-database" ^
                    --http-method POST ^
                    --region $(awsRegion) ^
                    --cli-binary-format raw-in-base64-out ^
                    --body "{}"

